"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Stable","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Welcome!","href":"/docs/","docId":"intro"},{"type":"category","label":"Intro to Gear Protocol","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Why do we build Gear?","href":"/docs/gear/why","docId":"gear/why"},{"type":"link","label":"Gear Distinctive Features","href":"/docs/gear/distinctive-features","docId":"gear/distinctive-features"},{"type":"category","label":"Gear Protocol Technology","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Substrate","href":"/docs/gear/technology/substrate","docId":"gear/technology/substrate"},{"type":"link","label":"Actor Model","href":"/docs/gear/technology/actor-model","docId":"gear/technology/actor-model"},{"type":"link","label":"WebAssembly (Wasm)","href":"/docs/gear/technology/WASM","docId":"gear/technology/WASM"},{"type":"link","label":"Persistent Memory","href":"/docs/gear/technology/persist-memory","docId":"gear/technology/persist-memory"},{"type":"link","label":"Gear Network State","href":"/docs/gear/technology/state","docId":"gear/technology/state"},{"type":"link","label":"State Transition","href":"/docs/gear/technology/state-transition","docId":"gear/technology/state-transition"}]},{"type":"link","label":"Glossary","href":"/docs/gear/glossary","docId":"gear/glossary"}]},{"type":"link","label":"Getting Started","href":"/docs/getting-started-in-5-minutes","docId":"getting-started-in-5-minutes"},{"type":"category","label":"Gear Node","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Setting Up","href":"/docs/node/setting-up","docId":"node/setting-up"},{"type":"link","label":"Node as a Service","href":"/docs/node/node-as-service","docId":"node/node-as-service"},{"type":"link","label":"Node Monitoring","href":"/docs/node/telemetry","docId":"node/telemetry"},{"type":"link","label":"Backup and Restore","href":"/docs/node/backup-restore","docId":"node/backup-restore"},{"type":"link","label":"Dev Net Mode","href":"/docs/node/dev-net","docId":"node/dev-net"},{"type":"link","label":"Multi-Node Mode","href":"/docs/node/multi-node","docId":"node/multi-node"},{"type":"link","label":"Node FAQ","href":"/docs/node/node-faq","docId":"node/node-faq"},{"type":"link","label":"Troubleshooting","href":"/docs/node/troubleshooting","docId":"node/troubleshooting"}]},{"type":"category","label":"Developing Smart Contracts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/developing-contracts/introduction","docId":"developing-contracts/introduction"},{"type":"link","label":"Gear Library","href":"/docs/developing-contracts/gstd","docId":"developing-contracts/gstd"},{"type":"link","label":"Mailbox","href":"/docs/developing-contracts/mailbox","docId":"developing-contracts/mailbox"},{"type":"link","label":"State Functions","href":"/docs/developing-contracts/state","docId":"developing-contracts/state"},{"type":"link","label":"Metadata","href":"/docs/developing-contracts/metadata","docId":"developing-contracts/metadata"},{"type":"link","label":"Data Encoding/Decoding","href":"/docs/developing-contracts/codec","docId":"developing-contracts/codec"},{"type":"link","label":"Asynchronous Programming","href":"/docs/developing-contracts/interactions-between-programs","docId":"developing-contracts/interactions-between-programs"},{"type":"link","label":"Create Program","href":"/docs/developing-contracts/create","docId":"developing-contracts/create"},{"type":"link","label":"Gas Reservation","href":"/docs/developing-contracts/gas-reservation","docId":"developing-contracts/gas-reservation"},{"type":"link","label":"Delayed Messages","href":"/docs/developing-contracts/delayed-messages","docId":"developing-contracts/delayed-messages"},{"type":"link","label":"Consistency and Reliability","href":"/docs/developing-contracts/distributed_transactions","docId":"developing-contracts/distributed_transactions"},{"type":"link","label":"System Signals","href":"/docs/developing-contracts/system-signals","docId":"developing-contracts/system-signals"},{"type":"link","label":"Upload Program","href":"/docs/developing-contracts/deploy","docId":"developing-contracts/deploy"},{"type":"link","label":"Program Testing","href":"/docs/developing-contracts/testing","docId":"developing-contracts/testing"},{"type":"link","label":"Testing with gtest","href":"/docs/developing-contracts/testing-gtest","docId":"developing-contracts/testing-gtest"},{"type":"link","label":"Testing with gclient","href":"/docs/developing-contracts/testing-gclient","docId":"developing-contracts/testing-gclient"},{"type":"category","label":"Gear Token Standards","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Gear fungible token standard","href":"/docs/developing-contracts/token-standards/gft20","docId":"developing-contracts/token-standards/gft20"}]}]},{"type":"category","label":"Smart Contract Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Prerequisites","href":"/docs/examples/prerequisites","docId":"examples/prerequisites"},{"type":"link","label":"PING-PONG","href":"/docs/examples/ping","docId":"examples/ping"},{"type":"link","label":"gFT (ERC-20)","href":"/docs/examples/gft-20","docId":"examples/gft-20"},{"type":"link","label":"gNFT (ERC-721)","href":"/docs/examples/gnft-721","docId":"examples/gnft-721"},{"type":"link","label":"Dynamic NFT","href":"/docs/examples/dynamic-nft","docId":"examples/dynamic-nft"},{"type":"link","label":"gNFT (ERC-4907)","href":"/docs/examples/gnft-4907","docId":"examples/gnft-4907"},{"type":"link","label":"gMT (ERC-1155)","href":"/docs/examples/gmt-1155","docId":"examples/gmt-1155"},{"type":"link","label":"Gear Feeds","href":"/docs/examples/feeds","docId":"examples/feeds"},{"type":"link","label":"DAO","href":"/docs/examples/DAO","docId":"examples/DAO"},{"type":"link","label":"Escrow","href":"/docs/examples/escrow","docId":"examples/escrow"},{"type":"link","label":"Game of chance","href":"/docs/examples/game-of-chance","docId":"examples/game-of-chance"},{"type":"link","label":"Dutch Auction","href":"/docs/examples/dutch-auction","docId":"examples/dutch-auction"},{"type":"link","label":"Supply chain","href":"/docs/examples/supply-chain","docId":"examples/supply-chain"},{"type":"link","label":"Multisig Wallet","href":"/docs/examples/multisig-wallet","docId":"examples/multisig-wallet"},{"type":"link","label":"Concert (FT to NFT transition)","href":"/docs/examples/concert","docId":"examples/concert"},{"type":"category","label":"NFT Marketplace","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Base Marketplace","href":"/docs/examples/nft-marketplace/marketplace","docId":"examples/nft-marketplace/marketplace"},{"type":"link","label":"Subsquid indexing","href":"/docs/examples/nft-marketplace/subsquid-marketplace","docId":"examples/nft-marketplace/subsquid-marketplace"},{"type":"link","label":"NFT frontend application","href":"/docs/examples/nft-marketplace/nft-application","docId":"examples/nft-marketplace/nft-application"}]},{"type":"link","label":"RMRK NFT standard","href":"/docs/examples/rmrk","docId":"examples/rmrk"},{"type":"link","label":"OnChain NFT","href":"/docs/examples/onchain-nft","docId":"examples/onchain-nft"},{"type":"link","label":"Staking","href":"/docs/examples/staking","docId":"examples/staking"},{"type":"link","label":"Crowdsale smart contract mechanics","href":"/docs/examples/crowdsale","docId":"examples/crowdsale"},{"type":"link","label":"Rock Paper Scissors","href":"/docs/examples/rock-paper-scissors","docId":"examples/rock-paper-scissors"},{"type":"link","label":"DEX","href":"/docs/examples/dex","docId":"examples/dex"},{"type":"link","label":"NFT pixelboard","href":"/docs/examples/nft-pixelboard","docId":"examples/nft-pixelboard"},{"type":"link","label":"Monopoly game","href":"/docs/examples/monopoly","docId":"examples/monopoly"},{"type":"category","label":"Oracle","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Gear Oracle","href":"/docs/examples/oracle/gear-oracle","docId":"examples/oracle/gear-oracle"},{"type":"link","label":"Dia Randomness Oracle","href":"/docs/examples/oracle/dia-randomness-oracle","docId":"examples/oracle/dia-randomness-oracle"}]},{"type":"link","label":"Decentralized DNS","href":"/docs/examples/dein","docId":"examples/dein"},{"type":"link","label":"Auto-subscription (VaraTube)","href":"/docs/examples/varatube","docId":"examples/varatube"},{"type":"link","label":"Tequila Train Game","href":"/docs/examples/tequila-train","docId":"examples/tequila-train"}]},{"type":"category","label":"Gear IDEA","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"IDEA Overview","href":"/docs/idea/idea-overview","docId":"idea/idea-overview"},{"type":"category","label":"Account","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create Account","href":"/docs/idea/account/create-account","docId":"idea/account/create-account"},{"type":"link","label":"SS58 account format","href":"/docs/idea/account/ss58","docId":"idea/account/ss58"}]}]},{"type":"category","label":"Gear-JS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting Started","href":"/docs/api/getting-started","docId":"api/getting-started"},{"type":"link","label":"Keyring","href":"/docs/api/keyring","docId":"api/keyring"},{"type":"link","label":"Calculate Gas","href":"/docs/api/calculate-gas","docId":"api/calculate-gas"},{"type":"link","label":"Upload Program","href":"/docs/api/upload-program","docId":"api/upload-program"},{"type":"link","label":"Upload Code","href":"/docs/api/submit-code","docId":"api/submit-code"},{"type":"link","label":"Send Message","href":"/docs/api/send-message","docId":"api/send-message"},{"type":"link","label":"Read State","href":"/docs/api/read-state","docId":"api/read-state"},{"type":"link","label":"Metadata & Type Creation","href":"/docs/api/metadata-type-creation","docId":"api/metadata-type-creation"},{"type":"link","label":"Mailbox","href":"/docs/api/mailbox","docId":"api/mailbox"},{"type":"link","label":"Events","href":"/docs/api/events","docId":"api/events"},{"type":"link","label":"Cookbook","href":"/docs/api/extra-queries","docId":"api/extra-queries"},{"type":"category","label":"Gear-JS tools","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Gear React application template","href":"/docs/api/tooling/create-gear-app","docId":"api/tooling/create-gear-app"},{"type":"link","label":"Meta CLI","href":"/docs/api/tooling/meta-cli","docId":"api/tooling/meta-cli"},{"type":"link","label":"React-hooks","href":"/docs/api/tooling/react-hooks","docId":"api/tooling/react-hooks"}]}]},{"type":"category","label":"General topics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Web3","href":"/docs/general/web3","docId":"general/web3"},{"type":"link","label":"dApps","href":"/docs/general/dApps","docId":"general/dApps"},{"type":"link","label":"Smart Contracts","href":"/docs/general/contracts","docId":"general/contracts"},{"type":"link","label":"DeFi","href":"/docs/general/defi","docId":"general/defi"},{"type":"link","label":"NFT","href":"/docs/general/nft","docId":"general/nft"},{"type":"link","label":"DAO","href":"/docs/general/dao","docId":"general/dao"}]},{"type":"category","label":"Gear-based Networks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Vara Network","href":"/docs/gear-networks/vara-intro","docId":"gear-networks/vara-intro"}]}]},"docs":{"api/calculate-gas":{"id":"api/calculate-gas","title":"Calculate gas","description":"Gear nodes charge gas fees for all network operations, whether that be executing a program\u2019s code or processing a message. This gas is paid for by the initiator of these actions.","sidebar":"docs"},"api/events":{"id":"api/events","title":"Events","description":"Events are generated for certain operations during execution. The following sections describe events that are part of the default Gear runtime.","sidebar":"docs"},"api/extra-queries":{"id":"api/extra-queries","title":"Cookbook","description":"Here is collected a set of useful code snippets in a question-answer format:","sidebar":"docs"},"api/getting-started":{"id":"api/getting-started","title":"Getting started","description":"Gear-JS API","sidebar":"docs"},"api/keyring":{"id":"api/keyring","title":"Keyring","description":"Keyring enables you to manage your key pair (account) to perform a wide range of operations, including signing, verifying and encrypting/decrypting. The SecretKey is never exposed to the outside.","sidebar":"docs"},"api/mailbox":{"id":"api/mailbox","title":"Mailbox","description":"The mailbox contains messages from the program that are waiting for user action.","sidebar":"docs"},"api/metadata-type-creation":{"id":"api/metadata-type-creation","title":"Basics & Metadata / Type creation","description":"Metadata enables interaction between the client side (JavaScript application) and the smart-contract (Rust program). Metadata is a kind of interface map that can help to identify and order a set of bytes into an understandable structure and indicates the function it is intended for.","sidebar":"docs"},"api/read-state":{"id":"api/read-state","title":"Read State","description":"There are two different ways to query the program State:","sidebar":"docs"},"api/send-message":{"id":"api/send-message","title":"Send Message","description":"Use GearApi.message.send method to send messages to the program:","sidebar":"docs"},"api/submit-code":{"id":"api/submit-code","title":"Upload code","description":"If you need to load the program code into the chain without initialization use GearApi.code.upload method to create upload_code extrinsic:","sidebar":"docs"},"api/tooling/create-gear-app":{"id":"api/tooling/create-gear-app","title":"Gear React application template","description":"Introducing Gear React Application Template: Accelerate Your Decentralized App Development","sidebar":"docs"},"api/tooling/meta-cli":{"id":"api/tooling/meta-cli","title":"meta-cli","description":"This CLI tool is deprecated and will be removed in the future.","sidebar":"docs"},"api/tooling/react-hooks":{"id":"api/tooling/react-hooks","title":"Gear React-hooks","description":"Hooks allow functional components to have access to programs running on Gear networks and significantly simplify the development of front-end applications.","sidebar":"docs"},"api/upload-program":{"id":"api/upload-program","title":"Upload Program","description":"A smart contract compiled to Wasm can be uploaded to the Gear network as a program. During uploading it is initialized in the network to be able to send and receive messages with other actors in the network (programs and users).","sidebar":"docs"},"developing-contracts/codec":{"id":"developing-contracts/codec","title":"Data encoding/decoding","description":"To optimize how data is sent and received over the network, Gear uses the parity-scale-codec - a Rust implementation of the SCALE Codec. This codec is used by the Substrate nodes\' internal runtime. SCALE is a lightweight format that enables the serialization and deserialization of data. Encoding (and decoding) data using SCALE makes it highly suitable for resource-constrained execution environments like blockchain runtimes and low-power/low-memory devices.","sidebar":"docs"},"developing-contracts/create":{"id":"developing-contracts/create","title":"Create program from program","description":"Business logic of an arbitrary decentralized application may require the program (smart contract) the possibility of creating, initializing and launching one or several other programs in the network. It can be necessary when external parties (users) need access to their own instance of the typical smart contract.","sidebar":"docs"},"developing-contracts/delayed-messages":{"id":"developing-contracts/delayed-messages","title":"Delayed messages for smart contracts automation","description":"The usual way that smart contracts on other blockchains continue to function is by relying on external, centralized resources. This means that the code of these contracts will not run and make changes to the blockchain\'s state until it is triggered by an on-chain transaction.","sidebar":"docs"},"developing-contracts/deploy":{"id":"developing-contracts/deploy","title":"Upload smart contracts","description":"Following the principles of Actor model for communication, uploading a program in the network is just one of the specific types of transactions that contain a Wasm file as a payload.","sidebar":"docs"},"developing-contracts/distributed_transactions":{"id":"developing-contracts/distributed_transactions","title":"Ensuring reliability in asyn\u0441 programming","description":"One of the key features of the Gear Protocol is its use of the Actor model for message-passing communication. The Actor model framework enables asynchronous messaging and parallel computation, which  drastically improves the achievable speed and scalability of dApps. In the Actor model, programs do not share state and instead communicate with each other through messages. If a program sends an asynchronous message to another program, it has to wait for a reply from the other program before it can proceed with the next operation.","sidebar":"docs"},"developing-contracts/gas-reservation":{"id":"developing-contracts/gas-reservation","title":"Gas Reservation","description":"Gas reservation is the powerful feature of Gear Protocol that enables the new approach to smart-contract programming and modern use cases.","sidebar":"docs"},"developing-contracts/gstd":{"id":"developing-contracts/gstd","title":"Gear Library","description":"The Gear Protocol\u2019s library gstd provides all the necessary and sufficient functions and methods for developing smart-contracts.","sidebar":"docs"},"developing-contracts/interactions-between-programs":{"id":"developing-contracts/interactions-between-programs","title":"Asynchronous programming","description":"Asynchronous interaction between Gear programs is similar to the usual asynchronous request in using await and implemented by sending a message.","sidebar":"docs"},"developing-contracts/introduction":{"id":"developing-contracts/introduction","title":"Attention developers!","description":"Want to take your blockchain development skills to the next level? Join Gear Academy\'s free course, \\"Gear Smart Contract Developer.\\" In this comprehensive course, you\'ll learn the ins and outs of developing on the Gear Protocol, from deploying programs onto the blockchain and interacting with them, to testing your programs on the Gear Network. You\'ll also gain hands-on experience navigating the @gear-js library for interacting with contracts on the client side and developing real-world applications, including contracts and frontends. Don\'t miss this opportunity to become a pro Gear blockchain developer. Enroll now in Gear Academy\'s \\"Gear Smart Contract Developer\\" course!","sidebar":"docs"},"developing-contracts/mailbox":{"id":"developing-contracts/mailbox","title":"Mailbox","description":"When the program sends a message to the user, this message is placed in the user\'s mailbox. Actually, the mailbox is a dedicated storage that keeps a message received from a program.","sidebar":"docs"},"developing-contracts/metadata":{"id":"developing-contracts/metadata","title":"Metadata","description":"Metadata is a kind of interface map that helps to transform a set of bytes into an understandable structure and indicates the function this structure is intended for. Metadata determines how all incoming and outgoing data will be encoded/decoded.","sidebar":"docs"},"developing-contracts/state":{"id":"developing-contracts/state","title":"Store data","description":"Persistent data of the Gear smart contract is stored in the same way as in a classic program and does not require initialization of the external storage.","sidebar":"docs"},"developing-contracts/system-signals":{"id":"developing-contracts/system-signals","title":"System signals","description":"The Gear Protocol ensures system and program\'s state consistency via introducing special handling mechanisms for potential issues and corner cases.","sidebar":"docs"},"developing-contracts/testing":{"id":"developing-contracts/testing","title":"How to test a Gear program","description":"Basics","sidebar":"docs"},"developing-contracts/testing-gclient":{"id":"developing-contracts/testing-gclient","title":"Testing with gclient","description":"gclient is intended to be used as a tool for testing Gear programs with a real blockchain network. It allows you to send extrinsics and RPCs by connecting to the network. We recommend using gclient for end-to-end testing to ensure the program works as expected in the real blockchain world.","sidebar":"docs"},"developing-contracts/testing-gtest":{"id":"developing-contracts/testing-gtest","title":"Testing with gtest","description":"gtest simulates a real network by providing mockups of the user, program, balances, mailbox, etc. Since it does not include parts of the actual blockchain, it is fast and lightweight. But being a model of the blockchain network, gtest cannot be a complete reflection of the latter.","sidebar":"docs"},"developing-contracts/token-standards/gft20":{"id":"developing-contracts/token-standards/gft20","title":"Gear fungible token standard","description":"Contract state:","sidebar":"docs"},"examples/concert":{"id":"examples/concert","title":"Concert Contract (FT to NFT transition)","description":"Introduction","sidebar":"docs"},"examples/crowdsale":{"id":"examples/crowdsale","title":"Crowdsale smart contract mechanics","description":"Introduction","sidebar":"docs"},"examples/DAO":{"id":"examples/DAO","title":"Decentralized autonomous organization","description":"Introduction","sidebar":"docs"},"examples/dein":{"id":"examples/dein","title":"Decentralized DNS","description":"Decentralized Internet (DNS) demonstrates an on-chain server-less approach to web sites and web applications hosting. Unlike server-based DNS built on centralized components and services, decentralized solutions running on the blockchain are characterized by boosted data security, enhanced data reconciliation, minimized system weak points, optimized resource allocation, and demonstrated great fault tolerance. It brings all the benefits of decentralization such as censorship resistance, security resilience, high transparency.","sidebar":"docs"},"examples/dex":{"id":"examples/dex","title":"DEX (decentralized exchange)","description":"Introduction","sidebar":"docs"},"examples/dutch-auction":{"id":"examples/dutch-auction","title":"Dutch auction","description":"Introduction","sidebar":"docs"},"examples/dynamic-nft":{"id":"examples/dynamic-nft","title":"Gear Dynamic Non-Fungible Token","description":"Introduction","sidebar":"docs"},"examples/escrow":{"id":"examples/escrow","title":"Escrow","description":"img alt","sidebar":"docs"},"examples/feeds":{"id":"examples/feeds","title":"Introduction","description":"In order to introduce our rapidly growing community to the platform developed by Gear, we\'ve developed a dApplication in order to showcase some of the features that can be implemented using our smart contracts. Specifically, this contract aims to build a platform simillar to Twitter: each user can have their own \\"feed\\", \\"feeds\\" can be subscribed to and the landing page contains global & personal \\"feeds\\".","sidebar":"docs"},"examples/game-of-chance":{"id":"examples/game-of-chance","title":"Game of chance","description":"img alt","sidebar":"docs"},"examples/gft-20":{"id":"examples/gft-20","title":"Gear Fungible Token","description":"What is ERC-20?","sidebar":"docs"},"examples/gmt-1155":{"id":"examples/gmt-1155","title":"Gear Multiple Token (gMT)","description":"Introduction","sidebar":"docs"},"examples/gnft-4907":{"id":"examples/gnft-4907","title":"Gear Rentable Non-Fungible Token","description":"Introduction","sidebar":"docs"},"examples/gnft-721":{"id":"examples/gnft-721","title":"Gear Non-Fungible Token","description":"img alt","sidebar":"docs"},"examples/monopoly":{"id":"examples/monopoly","title":"Monopoly game (Syndote)","description":"Syndote is the name of a Monopoly-like decentralized game that works completely on-chain. It has no backend or any centralized components, the user interface interacts directly with the smart contract uploaded in the Gear Network.","sidebar":"docs"},"examples/multisig-wallet":{"id":"examples/multisig-wallet","title":"Multisig Wallet","description":"Introduction","sidebar":"docs"},"examples/nft-marketplace/marketplace":{"id":"examples/nft-marketplace/marketplace","title":"NFT Marketplace","description":"img alt","sidebar":"docs"},"examples/nft-marketplace/nft-application":{"id":"examples/nft-marketplace/nft-application","title":"NFT frontend application","description":"This article explains how to create a React application and connect it to an NFT smart contract running in the blockchain.","sidebar":"docs"},"examples/nft-marketplace/subsquid-marketplace":{"id":"examples/nft-marketplace/subsquid-marketplace","title":"Subsquid-based data indexing for NFT Marketplace","description":"Creating a good and usable frontend for an NFT marketplace web-application requires an indexer of on-chain programs. It will enable historical data to be displayed in the fastest way possible. Subsquid helps to achieve this goal.","sidebar":"docs"},"examples/nft-pixelboard":{"id":"examples/nft-pixelboard","title":"NFT pixelboard","description":"Introduction","sidebar":"docs"},"examples/onchain-nft":{"id":"examples/onchain-nft","title":"On-chain gNFT assets","description":"Introduction","sidebar":"docs"},"examples/oracle/dia-randomness-oracle":{"id":"examples/oracle/dia-randomness-oracle","title":"Dia Randomness Oracle","description":"Randomness in blockchain","sidebar":"docs"},"examples/oracle/gear-oracle":{"id":"examples/oracle/gear-oracle","title":"Gear Oracle","description":"What is Oracle?","sidebar":"docs"},"examples/ping":{"id":"examples/ping","title":"PING-PONG","description":"Gear is very easy to write code for!","sidebar":"docs"},"examples/prerequisites":{"id":"examples/prerequisites","title":"Gear Examples","description":"Gear provides a set of examples that can be used for your familiarization with writing programs on Gear or become the basis for your own dApp//github.com/gear-dapps.","sidebar":"docs"},"examples/rmrk":{"id":"examples/rmrk","title":"RMRK NFT standard","description":"Introduction","sidebar":"docs"},"examples/rock-paper-scissors":{"id":"examples/rock-paper-scissors","title":"Rock Paper Scissors","description":"Introduction","sidebar":"docs"},"examples/staking":{"id":"examples/staking","title":"Staking","description":"Introduction","sidebar":"docs"},"examples/supply-chain":{"id":"examples/supply-chain","title":"Supply chain","description":"In logistics, a supply chain is a system for tracking and delivering to an end consumer various items. As a rule, such systems can\'t work without a lot of paperwork and other layers of bureaucracy. All of this costs a lot of time and money and increases the likelihood of an accidental error or, worst of all, a fraud. With the help of smart contract and blockchain technologies, it is possible to eliminate these problems by making a supply chain more efficient, reliable and transparent.","sidebar":"docs"},"examples/tequila-train":{"id":"examples/tequila-train","title":"Tequila Train Game","description":"Tequila Train is a game similar to the Mexican Train game but has several differences in rules. Tequila Train involves a hub, trains, and tequila shots, with each player receiving between 4 to 8 tiles at the start. The game has a playable limit of 8 players using 91 tiles.","sidebar":"docs"},"examples/varatube":{"id":"examples/varatube","title":"Decentralized subscription management and auto-renewal","description":"img alt","sidebar":"docs"},"gear-networks/vara-intro":{"id":"gear-networks/vara-intro","title":"About Vara Network","description":"Vara Network is the first stand-alone layer-1 decentralized network built and running on top of Gear Protocol.","sidebar":"docs"},"gear/distinctive-features":{"id":"gear/distinctive-features","title":"Gear Distinctive Features","description":"Truly decentralized","sidebar":"docs"},"gear/glossary":{"id":"gear/glossary","title":"Glossary","description":"Account","sidebar":"docs"},"gear/technology/actor-model":{"id":"gear/technology/actor-model","title":"Actor Model","description":"One of the key and distinguished features of the Gear Protocol is the Actor model for message-passing communications.","sidebar":"docs"},"gear/technology/persist-memory":{"id":"gear/technology/persist-memory","title":"Persistent Memory","description":"Another distinguished feature of the Gear Protocol is the Persistent memory approach. It is what makes development easier, removes a lot of complexity and makes protocol memory management match real-life hardware and operating systems.","sidebar":"docs"},"gear/technology/state":{"id":"gear/technology/state","title":"State components","description":"As any blockchain system, Gear maintains distributed state. Runtime code compiled to WebAssembly becomes part of the blockchain\u2019s storage state.","sidebar":"docs"},"gear/technology/state-transition":{"id":"gear/technology/state-transition","title":"State transition","description":"Each system follows the rules according to which the state of the system evolves. As the network processes new input data, the state is advanced according to state transition rules. This input data is packed in granular pieces of information called transactions.","sidebar":"docs"},"gear/technology/substrate":{"id":"gear/technology/substrate","title":"Substrate","description":"Substrate is a modular framework that enables the creation of custom-built unique blockchains by composing custom or pre-built components with networking, consensus mechanism, core functionality, security and governance features out of the box.","sidebar":"docs"},"gear/technology/WASM":{"id":"gear/technology/WASM","title":"What is WebAssembly (Wasm)","description":"WebAssembly is a way to run applications in programming languages other than JavaScript as web pages. Essentially, Wasm is just a virtual machine that runs on all modern browsers, but whereas in the past you were required to use JavaScript to run code in a web page, Wasm makes it possible to run code in browsers with programming languages other than JavaScript.","sidebar":"docs"},"gear/why":{"id":"gear/why","title":"Why do we build Gear?","description":"Global aspect","sidebar":"docs"},"general/contracts":{"id":"general/contracts","title":"What are Smart Contracts?","description":"Smart contracts are transactional computer programs that can execute the terms of an agreement automatically without the need for intervention. They were first proposed by Nick Szabo in the early \u201890s, but due to technological constraints they couldn\u2019t function properly. It wasn\u2019t until improvements were made to fundamental blockchain technology that application of smart contracts became possible.","sidebar":"docs"},"general/dao":{"id":"general/dao","title":"What are DAOs?","description":"DAOs are an effective and safe way to work with like-minded people around the globe. Essentially, they\u2019re safe ways to collaborate with strangers and commit funds to a specific cause. You can think of DAOs as magic internet organizations that\u2019re collectively owned and managed by its members.","sidebar":"docs"},"general/dApps":{"id":"general/dApps","title":"What are dApps?","description":"Decentralized Applications, or dApps, are applications that offer similar functionality to traditional applications but the main difference is that they are run on decentralized peer-to-peer networks, such as blockchains. Decentralized applications offer the services that make up the Web3 revolution.","sidebar":"docs"},"general/defi":{"id":"general/defi","title":"What is DeFi?","description":"Decentralized finance is a collection of financial services that are an alternative to the current financial system.","sidebar":"docs"},"general/nft":{"id":"general/nft","title":"What are NFTs?","description":"A Non-Fungible Token (NFT) is a unique type of cryptographic token that enables the tokenization of unique units of data to be stored on a blockchain.","sidebar":"docs"},"general/web3":{"id":"general/web3","title":"What is Web3?","description":"Web 3.0 is a new iteration of the internet that\u2019s powered by new technologies like artificial intelligence, machine learning and most importantly, blockchain technology.","sidebar":"docs"},"getting-started-in-5-minutes":{"id":"getting-started-in-5-minutes","title":"Getting Started","description":"This guide provides a general overview of running smart contracts on the networks powered by Gear Protocol (such as the Vara Network). It guides you through how to write a smart contract, compile it to Wasm and deploy it to the Gear network.","sidebar":"docs"},"idea/account/create-account":{"id":"idea/account/create-account","title":"How to create an account","description":"Key information and security","sidebar":"docs"},"idea/account/ss58":{"id":"idea/account/ss58","title":"SS58 Address Format","description":"SS58 is a simple address format designed for Substrate based chains. The basic idea is a base-58 encoded value which can identify a specific account on the Substrate chain. For more details about the format, please check https://docs.substrate.io/v3/advanced/ss58/.","sidebar":"docs"},"idea/idea-overview":{"id":"idea/idea-overview","title":"Gear IDEA online","description":"Gear IDEA is a convenient tool that\u2019s purpose is to familiarize users with the Gear platform. It provides smart-contract developers with the easiest and fastest way to write, compile, test and upload smart-contracts to a test network directly in their browser without additional configuration.","sidebar":"docs"},"intro":{"id":"intro","title":"Welcome!","description":"Welcome to Gear\u2019s documentation portal. This is the central source of information for everyone who is looking for general information about Gear. Here you will find guides and developer\'s documentation that will enable you to dive deeper into developing smart contracts on the Gear Protocol.","sidebar":"docs"},"node/backup-restore":{"id":"node/backup-restore","title":"Backup and restore the node","description":"Data structure","sidebar":"docs"},"node/dev-net":{"id":"node/dev-net","title":"Running Gear node in Dev Net mode","description":"Dev net is helpful for the development and debugging of your smart contracts. You can upload your program directly to a local node, send messages to a program and validate the program\'s logic.","sidebar":"docs"},"node/multi-node":{"id":"node/multi-node","title":"Creating a Multi-Node local testnet","description":"For more advanced smart contracts debugging and testing closer to the real network environment, you can build your local testnet that consists of several interconnected nodes. This mode allows to see the multi-node consensus algorithm in action.","sidebar":"docs"},"node/node-as-service":{"id":"node/node-as-service","title":"\u0421onfiguring a node as a Linux service","description":"Prerequisites","sidebar":"docs"},"node/node-faq":{"id":"node/node-faq","title":"Node FAQ","description":"Can I run the Gear node now?","sidebar":"docs"},"node/setting-up":{"id":"node/setting-up","title":"Setting Up Gear Node","description":"Introduction","sidebar":"docs"},"node/telemetry":{"id":"node/telemetry","title":"Sending Gear node telemetry","description":"The health of each Gear node and the entire network needs to be monitored to ensure truly decentralized and robust operations. This includes the various block production metrics as well as node uptime which is vital in PoS networks.","sidebar":"docs"},"node/troubleshooting":{"id":"node/troubleshooting","title":"Troubleshooting","description":"Typical errors and solutions are described here.","sidebar":"docs"}}}')}}]);